from user import *
from random import randint


class Order:
    __last_id = 0

    def __init__(self):
        Order.__last_id += 1
        self.id = Order.__last_id
        self.created = datetime.datetime.now()
        self.updated = None
        self.last_visit = self.created
        # review: здесь я бы тоже все поля сделал бы приватными
        # review: наверное можно было бы и не делать конструктор для этого класса
        # (то есть сделать, как в классе OrderDetails, без конструктора), но тут не уверен

    @staticmethod
    def get_user_tittle(user_name, user_phone):
        kod = randint(1000, 9999)
        if not user_name == User.get_user_by_phone(user_phone):
            User.get_user_by_phone(user_phone)
        elif input('Подтвердите свою личность. Для этого введите код, который мы выслали Вам на номер телефона:') == print(kod):
            print('Личность подтверждена')
            print('Введите через запятую товары, которые Вы хотите добавить в корзину:')
            _user_tittle = input()

            return _user_tittle

    # review: идея просить пользователя ввести список товаров и проверять его личность по коду прямо очень классная.

    # review: небольшие замечания по коду в функции get_user_tittle:

    # строчка 21: здесь, если я правильно понял, сравнивается имя пользователя, найденного по номеру телефона с именем,
    # подаваемым на вход функции. Но конструкция User.get_user_by_phone(user_phone) вернет на самом деле не имя, которое
    # явялется строкой, а самого пользователя

    # строчка 22: если честно, не совсем понял, для чего она здесь нужна. То есть не совсем понятно зачем, если имена
    # не совпали, возвращать пользователя по номеру телефона, может лучше генерировать ошибку, что такого пользователя
    # нет, например, но может я чего-то просто не правильно понял

    # строчка 23: получается, что выводится сообщение с просьбой ввести код, но сам код появится только после того, как
    # его ввести в консоль. То есть сначала нужно ввести код, который не известен, и только после этого он напечатается
    # в консоли. У меня не плучилось угадать четырехзначный код :)
    # Еще на самом деле нужно применить str к коду из-за того, что input() возвращает строку
    #
    # Но сама идея такой реализации прям очень классная
    #
    # Суммируя то, что я написал в замечаниях, я бы предложил вот так немного изменить метод get_user_tittle

    # @staticmethod
    # def get_user_tittle(user_name, user_phone):
    #     kod = randint(1000, 9999)
    #     if not (user_name == User.get_user_by_phone(user_phone).name):
    #         User.get_user_by_phone(user_phone)
    #     else:
    #         print(kod)
    #         if input('Подтвердите свою личность. Для этого введите код, который мы выслали Вам на номер телефона:') == str(kod):
    #             print('Личность подтверждена')
    #             print('Введите через запятую товары, которые Вы хотите добавить в корзину:')
    #             _user_tittle = input()
    #             return _user_tittle
